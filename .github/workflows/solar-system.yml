name: Solar System Workflow

on: 
    workflow_dispatch: 
    push: 
        branches:
            - main
            - feature/*

env:
    MONGO_URI: ${{ vars.MONGO_URI}}
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
        strategy:
          matrix:
            operating_system: [ubuntu-latest, macos-latest]
            nodejs_version: [18]
            exclude:
              - operating_system: macos-latest
                nodejs_version: 18
        runs-on: ${{ matrix.operating_system}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.nodejs_version}}
        - name: Cache NPM Dependencies
          uses: actions/cache@v3
          with:
            path: '**/node_modules'
            key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          run: npm install           
        - name: Unit Testing
          id: nodejs-unit-testing
          run: npm test
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha Test Result
            path: test-results.xml
    code-coverage:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4
          - name: Setup NodeJS Version
            uses: actions/setup-node@v4
            with:
              node-version: 18
          - name: Cache NPM Dependencies
            uses: actions/cache@v3
            with:
              path: '**/node_modules'
              key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          - name: Install Dependencies
            run: npm install
          - name: Check Code Coverage
            continue-on-error: true
            run: npm run coverage
          - name: Archive Test Result
            uses: actions/upload-artifact@v3
            with:
              name: Code Coverage Result
              path: coverage   
              retention-days: 1  
    docker:
      runs-on: ubuntu-latest
      needs: [code-coverage, unit-testing]
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Docker login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

              
        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-sytem:${{ github.sha}}

        - name: Docker Image Test
          run: |
               docker images
               docker run --name solarsystem-app -d \
                 -p 3000:3000 \
                 -e MONGO_URI=$MONGO_URI \
                 -e MONGO_USERNAME=$MONGO_USERNAME \
                 -e MONGO_PASSWORD=$MONGO_PASSWORD \
                    ${{ vars.DOCKERHUB_USERNAME }}/solar-sytem:${{ github.sha}}

                export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} solary-system-app')
                echo $IP

                echo Testing Image URL using wget
                wget -Q -0 127.0.0.1:3000/live | grep live
